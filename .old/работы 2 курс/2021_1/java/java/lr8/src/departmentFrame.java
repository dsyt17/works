/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Dimension;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.HeadlessException; 
import java.sql.*; 
import net.proteanit.sql.DbUtils; 
import javax.swing.JOptionPane; 
import java.awt.event.*;
/**
 *
 * @author Artem
 */
public class departmentFrame extends javax.swing.JFrame {
    
    Connection connect = null; 

    PreparedStatement pst = null; 

    ResultSet rs = null;    
    /**
     * Creates new form departmentFrame
     */
    public departmentFrame() {
        initComponents();
        show_department(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Номер", "Отдел"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Добавить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Удалить");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Отдел:");

        jButton3.setText("Изменить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<department> departmentList() { 
         ArrayList<department> departmentList = new ArrayList();
  
        try { 

            Connection connect = DriverManager.getConnection("jdbc:sqlserver://localhost\\DESKTOP-8QUV2V6\\SQLEXPRESS:1433;databaseName=test","igorg","igorg"); 

            String sql = "select * from department";
            Statement st = connect.createStatement();
            rs = st.executeQuery(sql);

            department dep; 

            while (rs.next()){
                dep = new department(rs.getInt("ID"), rs.getString("department"));
                departmentList.add(dep);
            }  

        } 

        catch (Exception e) { 

            JOptionPane.showMessageDialog(null, e); 

        } 

        return departmentList; 
    }   
    
    public void show_department() { 

        ArrayList<department> deplist = departmentList(); 
        
        DefaultTableModel mod = (DefaultTableModel)jTable1.getModel();

        Object[] col = new Object[2]; 

        for (int i=0; i<deplist.size(); i++) { 

            col[0] = deplist.get(i).getid(); 

            col[1] = deplist.get(i).getdepartment(); 

            mod.addRow(col); 

        } 

    } 

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try { 

            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost\\DESKTOP-8QUV2V6\\SQLEXPRESS:1433;databaseName=test","igorg","igorg"); 

            String sql = "insert into department (department) values (?)"; 

            PreparedStatement pst = con.prepareStatement(sql); 

            pst.setString (1, jTextField1.getText()); 

            pst.executeUpdate(); 

            JOptionPane.showMessageDialog(null, "Inserted!"); 

            con.close(); 

            showDataTable(); 

        }  

        catch (Exception e) { 

            JOptionPane.showMessageDialog(null, e); 

        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel tblmod = (DefaultTableModel)jTable1.getModel(); 

        String tbl_department = tblmod.getValueAt(jTable1.getSelectedRow(), 1).toString(); 

        

        jTextField1.setText(tbl_department); 

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       DefaultTableModel tblmod = (DefaultTableModel)jTable1.getModel();
        if (jTable1.getSelectedRowCount() == 1) {
            try {
                String sql = "update department set department=? where id =?";
                connect = DriverManager.getConnection("jdbc:sqlserver://localhost\\DESKTOP-8QUV2V6\\SQLEXPRESS:1433;databaseName=test","igorg","igorg");
                pst = connect.prepareStatement(sql);
                pst.setString(1, jTextField1.getText());
                pst.setString(2, tblmod.getValueAt(jTable1.getSelectedRow(), 0).toString());
                pst.executeUpdate();
                
                DefaultTableModel mod = (DefaultTableModel)jTable1.getModel();
                mod.setRowCount(0);
                show_department();
            } 
            catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, ex); 
            }
                JOptionPane.showMessageDialog(null, "The data updated!");
            } 
        else { if (jTable1.getSelectedRowCount() == 0)
                    JOptionPane.showMessageDialog(null, "The string is not selected!");
            else { 
                    JOptionPane.showMessageDialog(null, "Select single string for update!");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try { 

            String sql = "delete from department where id =?"; 
            
            DefaultTableModel tblmod = (DefaultTableModel)jTable1.getModel();
             
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost\\DESKTOP-8QUV2V6\\SQLEXPRESS:1433;databaseName=test","igorg","igorg"); 

            pst = connect.prepareStatement(sql); 

            pst.setString(1, tblmod.getValueAt(jTable1.getSelectedRow(), 0).toString());

            pst.executeUpdate(); 

            JOptionPane.showMessageDialog(null, "The data deleted!"); 

        } catch (SQLException | HeadlessException ex) { 

            JOptionPane.showMessageDialog(null, ex); } 

        showDataTable(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(departmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(departmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(departmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(departmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new departmentFrame().setVisible(true);
            }
        });
    }
public void showDataTable() {
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost\\DESKTOP-8QUV2V6\\SQLEXPRESS:1433;databaseName=test","igorg","igorg");
            String sql = "select * from department order by id";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs)); }
        
        
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex); }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
